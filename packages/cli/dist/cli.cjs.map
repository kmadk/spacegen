{"version":3,"sources":["../src/cli.ts","../src/serve.ts"],"names":["require"],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nimport { Command } from \"commander\";\nimport { loadIR, saveIR, canonicalize, validateIR, irHash } from \"@fir/ir\";\nimport schema from \"@fir/ir/schema.json\" assert { type: \"json\" };\nimport { lintCompat } from \"@fir/compat\";\nimport { buildSemanticTree } from \"@fir/runtime-core\";\nimport { renderToVoice } from \"@fir/adapter-voice-ssml\";\nimport { serve } from \"./serve.js\";\n\nconst program = new Command();\nprogram.name(\"ir\").description(\"FIR CLI\").version(\"0.6.0\");\n\nprogram\n  .command(\"validate\")\n  .argument(\"<input>\")\n  .action((input) => {\n    const ir = loadIR(input);\n    const res = validateIR(ir, schema);\n    if (!res.ok) {\n      console.error(\"INVALID IR:\");\n      for (const e of res.errors || []) console.error(\" -\", e);\n      process.exit(2);\n    }\n    console.log(\"IR is valid.\");\n  });\n\nprogram\n  .command(\"canonicalize\")\n  .argument(\"<input>\")\n  .argument(\"<output>\")\n  .action((input, output) => {\n    const ir = loadIR(input);\n    const c = canonicalize(ir);\n    saveIR(output, c);\n    console.log(\"Wrote canonical IR to\", output);\n  });\n\nprogram\n  .command(\"lint-compat\")\n  .argument(\"<input>\")\n  .action((input) => {\n    const ir = loadIR(input);\n    const { messages, dci } = lintCompat(ir);\n    console.log(\"DCI:\", dci, \"%\");\n    for (const m of messages) console.log(`${m.level}: ${m.path} ${m.message}`);\n    if (ir.meta?.strictMode && messages.some((m) => m.level === \"ERROR\")) {\n      console.error(\"Strict Mode: non-portable constructs present.\");\n      process.exit(3);\n    }\n  });\n\nprogram\n  .command(\"prove\")\n  .argument(\"<input>\")\n  .action((input) => {\n    const ir = loadIR(input);\n    const acts = (ir.actions || []) as any[];\n    const issues: string[] = [];\n    for (let i = 0; i < acts.length; i++) {\n      const a = acts[i];\n      if (a.kind === \"action.query\") {\n        const sql = String(a.sql || \"\").toLowerCase();\n        if (!sql.includes(\" limit \"))\n          issues.push(`/actions/${i}: query must include LIMIT`);\n      }\n    }\n    const { messages } = lintCompat(ir);\n    for (const m of messages)\n      if (m.level === \"ERROR\") issues.push(`compat: ${m.path} ${m.message}`);\n    if (issues.length) {\n      console.error(\"PROOF FAILED:\");\n      for (const i of issues) console.error(\" -\", i);\n      process.exit(4);\n    }\n    console.log(\"PROOF OK. ir_hash:\", irHash(ir));\n  });\n\nprogram\n  .command(\"render\")\n  .option(\"--adapter <name>\", \"voice\")\n  .argument(\"<input>\")\n  .action((input, opts) => {\n    const ir = loadIR(input);\n    const tree = buildSemanticTree(ir, { scale: 1 });\n    if (opts.adapter === \"voice\") {\n      console.log(renderToVoice(tree));\n    } else {\n      console.error(\"Unknown adapter\", opts.adapter);\n      process.exit(5);\n    }\n  });\n\nprogram\n  .command(\"serve\")\n  .description(\"Start a development server to preview IR\")\n  .argument(\"<input>\", \"path to IR file\")\n  .option(\"-p, --port <number>\", \"port to serve on\", \"8080\")\n  .option(\"-h, --host <string>\", \"host to bind to\", \"localhost\")\n  .action(async (input, opts) => {\n    try {\n      await serve(input, {\n        port: parseInt(opts.port, 10),\n        host: opts.host,\n      });\n    } catch (error) {\n      console.error(\n        \"Failed to start server:\",\n        error instanceof Error ? error.message : String(error)\n      );\n      process.exit(6);\n    }\n  });\n\nprogram.parse();\n","import * as http from \"node:http\";\nimport * as fs from \"node:fs\";\nimport * as path from \"node:path\";\nimport { createRequire } from \"node:module\";\n\nconst require = createRequire(import.meta.url);\n\ninterface ServeOptions {\n  port?: number;\n  host?: string;\n}\n\nexport async function serve(\n  irPath: string,\n  options: ServeOptions = {}\n): Promise<void> {\n  const { port = 8080, host = \"localhost\" } = options;\n\n  // Validate IR file exists\n  if (!fs.existsSync(irPath)) {\n    throw new Error(`IR file not found: ${irPath}`);\n  }\n\n  // Load IR data\n  const irData = JSON.parse(fs.readFileSync(irPath, \"utf8\"));\n\n  // Spatial HTML with infinite canvas\n  const indexHtml = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>FIR Spatial Preview - ${path.basename(irPath)}</title>\n  <style>\n    body {\n      margin: 0;\n      font-family: system-ui, -apple-system, sans-serif;\n      background: #f5f5f5;\n      overflow: hidden;\n      user-select: none;\n    }\n    #app {\n      width: 100vw;\n      height: 100vh;\n      overflow: hidden;\n      cursor: grab;\n    }\n    #app:active {\n      cursor: grabbing;\n    }\n    #viewport {\n      transform-origin: 0 0;\n      transition: transform 0.1s ease-out;\n    }\n    .controls {\n      position: fixed;\n      top: 1rem;\n      right: 1rem;\n      background: rgba(255, 255, 255, 0.95);\n      backdrop-filter: blur(10px);\n      padding: 1rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 16px rgba(0,0,0,0.1);\n      z-index: 1000;\n      min-width: 200px;\n    }\n    .controls h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      color: #444;\n      font-weight: 600;\n    }\n    .info {\n      font-family: 'SF Mono', monospace;\n      font-size: 0.75rem;\n      color: #666;\n      line-height: 1.5;\n    }\n    .semantic-level {\n      font-weight: bold;\n      color: #2563eb;\n      text-transform: uppercase;\n      font-size: 0.875rem;\n      margin-top: 0.5rem;\n    }\n    .coordinates {\n      opacity: 0.7;\n    }\n    .error {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background: #ff4444;\n      color: white;\n      padding: 2rem;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    }\n  </style>\n</head>\n<body>\n  <div class=\"controls\">\n    <h3>🌌 Spatial Computing</h3>\n    <div class=\"info\">\n      <div>Position: <span id=\"position\" class=\"coordinates\">0, 0</span></div>\n      <div>Zoom: <span id=\"zoom-level\">100%</span></div>\n      <div>Nodes: ${countNodes(irData)}</div>\n      <div class=\"semantic-level\" id=\"semantic-level\">Standard</div>\n      <div style=\"margin-top: 0.5rem; padding-top: 0.5rem; border-top: 1px solid #e5e7eb;\">\n        <div style=\"font-weight: 600; color: #444; margin-bottom: 0.25rem;\">Generated Query:</div>\n        <div id=\"query-preview\" style=\"font-family: monospace; font-size: 0.6rem; color: #059669; background: #f0fdf4; padding: 0.25rem; border-radius: 4px; max-height: 60px; overflow-y: auto;\">\n          SELECT * FROM entities LIMIT 100\n        </div>\n      </div>\n      <div style=\"margin-top: 0.5rem; opacity: 0.6; font-size: 0.65rem;\">\n        <div>🖱️ Scroll to zoom</div>\n        <div>🖐️ Drag to pan</div>\n        <div>🏠 Esc to home</div>\n      </div>\n    </div>\n  </div>\n  <div id=\"app\">\n    <div id=\"viewport\"></div>\n  </div>\n  \n  <script type=\"module\">\n    // Import the modules\n    import { buildSemanticTree } from '/runtime-core.js';\n    import { renderToDom } from '/adapter-web-dom.js';\n    import { \n      Viewport, \n      getSemanticLevel, \n      generateQuery \n    } from '/spatial-kernel.js';\n    \n    // Create viewport instance\n    const viewport = new Viewport(0, 0, 1);\n    viewport.width = window.innerWidth;\n    viewport.height = window.innerHeight;\n    \n    // Drag state\n    let isDragging = false;\n    let dragStart = { x: 0, y: 0 };\n    let dragOffset = { x: 0, y: 0 };\n    \n    // Elements\n    const app = document.getElementById('app');\n    const viewportEl = document.getElementById('viewport');\n    const zoomLevel = document.getElementById('zoom-level');\n    const positionEl = document.getElementById('position');\n    const semanticEl = document.getElementById('semantic-level');\n    const queryEl = document.getElementById('query-preview');\n    \n    // Load IR data\n    async function loadIR() {\n      try {\n        const response = await fetch('/ir.json');\n        return await response.json();\n      } catch (error) {\n        console.error('Failed to load IR:', error);\n        document.body.innerHTML = '<div class=\"error\">Failed to load IR data</div>';\n        throw error;\n      }\n    }\n    \n    // Render function\n    function render(ir) {\n      try {\n        const tree = buildSemanticTree(ir, { scale: viewport.scale });\n        renderToDom(tree, viewportEl, { \n          scale: viewport.scale, \n          x: viewport.x, \n          y: viewport.y \n        });\n        \n        // Update UI using spatial kernel\n        zoomLevel.textContent = Math.round(viewport.scale * 100) + '%';\n        positionEl.textContent = Math.round(viewport.x) + ', ' + Math.round(viewport.y);\n        \n        // Get semantic level from spatial kernel\n        const level = getSemanticLevel(viewport.scale);\n        // Capitalize first letter for display\n        const levelDisplay = level.charAt(0).toUpperCase() + level.slice(1);\n        semanticEl.textContent = levelDisplay;\n        \n        // Update semantic level color (levels are lowercase from enum)\n        semanticEl.style.color = {\n          'quantum': '#dc2626',\n          'atomic': '#ea580c',\n          'molecular': '#ca8a04',\n          'standard': '#2563eb',\n          'system': '#7c3aed',\n          'universal': '#c026d3'\n        }[level] || '#2563eb';\n        \n        // Generate query using spatial kernel\n        const query = generateQuery(viewport, 'entities');\n        // Format for display\n        queryEl.textContent = query.replace(/\\s+/g, ' ').substring(0, 200);\n      } catch (error) {\n        console.error('Render error:', error);\n        viewportEl.innerHTML = '<div style=\"padding: 2rem; text-align: center;\">Render error: ' + error.message + '</div>';\n      }\n    }\n    \n    // Zoom handling (smooth and cinematic)\n    app.addEventListener('wheel', (e) => {\n      e.preventDefault();\n      \n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      \n      // Use viewport zoom method\n      viewport.zoom(delta);\n      \n      // Zoom towards mouse position\n      const rect = app.getBoundingClientRect();\n      const mouseX = e.clientX - rect.left;\n      const mouseY = e.clientY - rect.top;\n      \n      // Calculate new viewport position to zoom towards mouse\n      const scaleRatio = viewport.scale / (viewport.scale / delta);\n      viewport.x = mouseX - (mouseX - viewport.x) * scaleRatio;\n      viewport.y = mouseY - (mouseY - viewport.y) * scaleRatio;\n      \n      loadIR().then(render);\n    }, { passive: false });\n    \n    // Pan handling\n    app.addEventListener('mousedown', (e) => {\n      isDragging = true;\n      dragStart = { x: e.clientX, y: e.clientY };\n      dragOffset = { x: viewport.x, y: viewport.y };\n    });\n    \n    window.addEventListener('mousemove', (e) => {\n      if (!isDragging) return;\n      \n      const dx = e.clientX - dragStart.x;\n      const dy = e.clientY - dragStart.y;\n      \n      // Reset to drag offset and apply pan delta\n      viewport.x = dragOffset.x;\n      viewport.y = dragOffset.y;\n      viewport.pan(dx, dy);\n      \n      loadIR().then(render);\n    });\n    \n    window.addEventListener('mouseup', () => {\n      isDragging = false;\n    });\n    \n    // Keyboard navigation\n    window.addEventListener('keydown', (e) => {\n      switch(e.key) {\n        case 'Escape':\n          // Return home using viewport reset\n          viewport.reset();\n          loadIR().then(render);\n          break;\n        case 'ArrowUp':\n          viewport.pan(0, -50);\n          loadIR().then(render);\n          break;\n        case 'ArrowDown':\n          viewport.pan(0, 50);\n          loadIR().then(render);\n          break;\n        case 'ArrowLeft':\n          viewport.pan(-50, 0);\n          loadIR().then(render);\n          break;\n        case 'ArrowRight':\n          viewport.pan(50, 0);\n          loadIR().then(render);\n          break;\n        case '+':\n        case '=':\n          viewport.zoom(1.2);\n          loadIR().then(render);\n          break;\n        case '-':\n          viewport.zoom(0.8);\n          loadIR().then(render);\n          break;\n      }\n    });\n    \n    // Initial render\n    loadIR().then(render).catch(console.error);\n  </script>\n</body>\n</html>\n  `.trim();\n\n  // Create HTTP server\n  const server = http.createServer((req, res) => {\n    // Enable CORS for development\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    res.setHeader(\"Access-Control-Allow-Methods\", \"GET, OPTIONS\");\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\n    if (req.method === \"OPTIONS\") {\n      res.writeHead(204);\n      res.end();\n      return;\n    }\n\n    // Route handling\n    switch (req.url) {\n      case \"/\":\n        res.writeHead(200, { \"Content-Type\": \"text/html\" });\n        res.end(indexHtml);\n        break;\n\n      case \"/ir.json\":\n        res.writeHead(200, { \"Content-Type\": \"application/json\" });\n        res.end(JSON.stringify(irData, null, 2));\n        break;\n\n      case \"/runtime-core.js\":\n        try {\n          const runtimeCorePath = require.resolve(\n            \"@fir/runtime-core/dist/index.js\"\n          );\n          const content = fs.readFileSync(runtimeCorePath, \"utf8\");\n          res.writeHead(200, {\n            \"Content-Type\": \"application/javascript\",\n            \"Cache-Control\": \"no-cache\",\n          });\n          res.end(content);\n        } catch (error) {\n          res.writeHead(500, { \"Content-Type\": \"text/plain\" });\n          res.end(\"Failed to load runtime-core\");\n        }\n        break;\n\n      case \"/adapter-web-dom.js\":\n        try {\n          const adapterPath = require.resolve(\n            \"@fir/adapter-web-dom/dist/index.js\"\n          );\n          const content = fs.readFileSync(adapterPath, \"utf8\");\n          res.writeHead(200, {\n            \"Content-Type\": \"application/javascript\",\n            \"Cache-Control\": \"no-cache\",\n          });\n          res.end(content);\n        } catch (error) {\n          res.writeHead(500, { \"Content-Type\": \"text/plain\" });\n          res.end(\"Failed to load adapter-web-dom\");\n        }\n        break;\n\n      case \"/spatial-kernel.js\":\n        try {\n          // Serve the ES module version, not CommonJS\n          const kernelPath = path.join(\n            path.dirname(require.resolve(\"@fir/spatial-kernel\")),\n            \"index.js\"\n          );\n          const content = fs.readFileSync(kernelPath, \"utf8\");\n          res.writeHead(200, {\n            \"Content-Type\": \"application/javascript\",\n            \"Cache-Control\": \"no-cache\",\n          });\n          res.end(content);\n        } catch (error) {\n          res.writeHead(500, { \"Content-Type\": \"text/plain\" });\n          res.end(\"Failed to load spatial-kernel: \" + error.message);\n        }\n        break;\n\n      case \"/health\":\n        res.writeHead(200, { \"Content-Type\": \"application/json\" });\n        res.end(\n          JSON.stringify({ status: \"ok\", timestamp: new Date().toISOString() })\n        );\n        break;\n\n      default:\n        res.writeHead(404, { \"Content-Type\": \"text/plain\" });\n        res.end(\"Not found\");\n    }\n  });\n\n  // Start server\n  return new Promise((resolve, reject) => {\n    server.on(\"error\", reject);\n    server.listen(port, host, () => {\n      console.log(`\\n🚀 FIR Preview Server`);\n      console.log(`   Local:    http://${host}:${port}`);\n      console.log(`   IR Data:  http://${host}:${port}/ir.json`);\n      console.log(`   Health:   http://${host}:${port}/health`);\n      console.log(`\\n📄 Serving: ${irPath}`);\n      console.log(`\\nPress Ctrl+C to stop\\n`);\n      resolve();\n    });\n\n    // Graceful shutdown\n    process.on(\"SIGINT\", () => {\n      console.log(\"\\n\\nShutting down server...\");\n      server.close(() => {\n        console.log(\"Server closed\");\n        process.exit(0);\n      });\n    });\n  });\n}\n\n// Helper function to count nodes in IR\nfunction countNodes(ir: any): number {\n  let count = 0;\n\n  function traverse(obj: any) {\n    if (!obj || typeof obj !== \"object\") return;\n\n    if (obj.ui || obj.uiSummaries) {\n      // Count UI nodes\n      const nodes = obj.ui || obj.uiSummaries || {};\n      count += Object.keys(nodes).length;\n    }\n\n    // Traverse nested objects\n    for (const key in obj) {\n      if (typeof obj[key] === \"object\") {\n        traverse(obj[key]);\n      }\n    }\n  }\n\n  traverse(ir);\n  return count;\n}\n"]}